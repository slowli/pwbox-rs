var N = null;var searchIndex = {};
searchIndex["pwbox"]={"doc":"Password-based encryption and decryption for Rust.","items":[[3,"CipherWithMac","pwbox","Authenticated cipher constructed from an ordinary…",N,N],[3,"ErasedPwBox","","Password-encrypted box suitable for (de)serialization.",N,N],[3,"Eraser","","Helper structure to convert password-encrypted boxes to a…",N,N],[3,"CipherOutput","","Output of a `Cipher`.",N,N],[12,"ciphertext","","Encrypted data. Has the same size as the original data.",0,N],[12,"mac","","Message authentication code for the `ciphertext`.",0,N],[3,"SensitiveData","","Container for data obtained after opening a `PwBox`.",N,N],[3,"PwBox","","Password-encrypted data.",N,N],[3,"RestoredPwBox","","Password-encrypted box restored after deserialization.",N,N],[3,"PwBoxBuilder","","Builder for `PwBox`es.",N,N],[4,"EraseError","","Errors occurring during erasing a `PwBox`.",N,N],[13,"NoKdf","","KDF used in the box is not registered with the `Eraser`.",1,N],[13,"NoCipher","","Cipher used in the box is not registered with the `Eraser`.",1,N],[13,"SerializeKdf","","Error serializing KDF params.",1,N],[4,"Error","","Errors occurring during `PwBox` operations.",N,N],[13,"NoCipher","","A cipher with the specified name is not registered.",2,N],[13,"NoKdf","","A key derivation function with the specified name is not…",2,N],[13,"KdfParams","","Failed to parse KDF parameters.",2,N],[13,"NonceLen","","Incorrect nonce length encountered.",2,N],[13,"MacLen","","Incorrect MAC length encountered.",2,N],[13,"SaltLen","","Incorrect salt length encountered.",2,N],[13,"MacMismatch","","Failed to verify MAC code.",2,N],[13,"DeriveKey","","Error during KDF invocation.",2,N],[11,"len","","Returns the byte size of the encrypted data stored in this…",3,[[["self"]],["usize"]]],[11,"new","","Creates an `Eraser` with no ciphers or KDFs.",4,[[],["self"]]],[11,"add_cipher","","Adds a cipher.",4,[[["self"],["str"]],["self"]]],[11,"add_kdf","","Adds a key derivation function.",4,[[["self"],["str"]],["self"]]],[11,"add_suite","","Adds all KDFs and ciphers from the specified `Suite`.",4,[[["self"]],["self"]]],[11,"erase","","Converts a `pwbox` into serializable form.",4,[[["self"],["pwbox"]],["result",["erasedpwbox","eraseerror"]]]],[11,"restore","","Restores a `PwBox` from the serialized form.",4,[[["self"],["erasedpwbox"]],["result",["restoredpwbox","error"]]]],[0,"rcrypto","","`rust-crypto` cryptographic backend.",N,N],[3,"Scrypt","pwbox::rcrypto","`Scrypt` key derivation function parameterized as per the…",N,N],[3,"Aes128Gcm","","AES-128 cipher in GCM mode.",N,N],[4,"Aes128Ctr","","AES-128 cipher in CTR mode.",N,N],[4,"Keccak256","","MAC construction based on Keccak256 hash function.",N,N],[4,"RustCrypto","","Suite for password-based encryption provided by…",N,N],[11,"light","","Returns \"light\" `scrypt` parameters as used in Ethereum…",5,[[],["self"]]],[11,"custom","","Creates custom parameters for scrypt KDF.",5,[[["u8"],["u32"]],["self"]]],[0,"sodium","pwbox","Crypto primitives based on `libsodium`.",N,N],[3,"Scrypt","pwbox::sodium","`Scrypt` key derivation function parameterized as per…",N,N],[12,"opslimit","","Parameter determining the computational hardness of the KDF.",6,N],[12,"memlimit","","Parameter determining the RAM consumption of the KDF. The…",6,N],[3,"XSalsa20Poly1305","","`xsalsa20` symmetric cipher with `poly1305` MAC.",N,N],[4,"Sodium","","Suite for password-based encryption provided by `libsodium`.",N,N],[11,"light","","Returns \"light\" `scrypt` parameters as used in Ethereum…",6,[[],["self"]]],[8,"Mac","pwbox","Message authentication code.",N,N],[18,"KEY_LEN","","Byte size of a MAC key.",7,N],[18,"MAC_LEN","","Byte size of the MAC output.",7,N],[10,"digest","","Digests a message under the specified key.",7,N],[8,"UnauthenticatedCipher","","Symmetric cipher without built-in authentication.",N,N],[18,"KEY_LEN","","Byte size of a key for this cipher.",8,N],[18,"NONCE_LEN","","Byte size of a nonce (aka initialization vector, IV) for…",8,N],[10,"seal_or_open","","Encrypts or decrypts `message` in place, given the `nonce`…",8,N],[8,"Suite","","Cryptographic suite providing ciphers and KDFs for…",N,N],[16,"Cipher","","Recommended cipher for this suite.",9,N],[16,"DeriveKey","","Recommended KDF for this suite.",9,N],[11,"build_box","","Initializes a `PwBoxBuilder` with the recommended cipher…",9,[[["r"]],["pwboxbuilder"]]],[10,"add_ciphers_and_kdfs","","Adds ciphers and KDFs from this suite into the specified…",9,[[["eraser"]]]],[8,"Cipher","","Authenticated symmetric cipher.",N,N],[18,"KEY_LEN","","Byte size of a key.",10,N],[18,"NONCE_LEN","","Byte size of a nonce (aka initialization vector, or IV).",10,N],[18,"MAC_LEN","","Byte size of a message authentication code (MAC).",10,N],[10,"seal","","Encrypts `message` with the provided `key` and `nonce`.",10,N],[10,"open","","Decrypts `encrypted` message with the provided `key` and…",10,N],[8,"DeriveKey","","Key derivation function (KDF).",N,N],[10,"salt_len","","Returns byte size of salt supplied to the KDF.",11,[[["self"]],["usize"]]],[10,"derive_key","","Derives a key from the given password and salt.",11,N],[11,"new","","Creates a new box by using default settings of the…",12,N],[11,"len","","Returns the byte size of the encrypted data stored in this…",12,[[["self"]],["usize"]]],[11,"open_into","","Decrypts the box into the specified container.",12,N],[11,"open","","Decrypts the box and returns its contents. The returned…",12,N],[11,"len","","Returns the byte size of the encrypted data stored in this…",13,[[["self"]],["usize"]]],[11,"open_into","","Decrypts the box into the specified container.",13,N],[11,"open","","Decrypts the box and returns its contents. The returned…",13,N],[11,"new","","Initializes the builder with a random number generator.",14,[[["r"]],["self"]]],[11,"kdf","","Sets up a custom KDF.",14,[[["self"],["k"]],["self"]]],[11,"seal","","Creates a new `PwBox` with the specified password and…",14,N],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"clear","","",4,N],[11,"initialize","","",4,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"as_fail","","",1,[[["self"]],["fail"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"as_fail","","",2,[[["self"]],["fail"]]],[11,"from","pwbox::rcrypto","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"clear","","",5,N],[11,"initialize","","",5,N],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"clear","","",17,N],[11,"initialize","","",17,N],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","pwbox::sodium","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"clear","","",6,N],[11,"initialize","","",6,N],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"clear","","",21,N],[11,"initialize","","",21,N],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"seal_or_open","pwbox::rcrypto","",18,N],[11,"digest","","",19,N],[11,"add_ciphers_and_kdfs","","",20,[[["eraser"]]]],[11,"add_ciphers_and_kdfs","pwbox::sodium","",22,[[["eraser"]]]],[11,"salt_len","pwbox::rcrypto","",5,[[["self"]],["usize"]]],[11,"derive_key","","",5,N],[11,"salt_len","pwbox::sodium","",6,[[["self"]],["usize"]]],[11,"derive_key","","",6,N],[11,"seal","pwbox","Works as follows:",15,N],[11,"open","","Works as follows:",15,N],[11,"seal","pwbox::rcrypto","",17,N],[11,"open","","",17,N],[11,"seal","pwbox::sodium","",21,N],[11,"open","","",21,N],[11,"default","pwbox","",4,[[],["self"]]],[11,"default","pwbox::rcrypto","Returns the \"interactive\" `scrypt` parameters as defined…",5,[[],["self"]]],[11,"default","","",17,[[],["aes128gcm"]]],[11,"default","pwbox::sodium","Returns the \"interactive\" `scrypt` parameters as defined…",6,[[],["self"]]],[11,"default","","",21,[[],["xsalsa20poly1305"]]],[11,"clone","pwbox","",3,[[["self"]],["erasedpwbox"]]],[11,"clone","","",0,[[["self"]],["cipheroutput"]]],[11,"clone","","",16,[[["self"]],["sensitivedata"]]],[11,"clone","pwbox::rcrypto","",5,[[["self"]],["scrypt"]]],[11,"clone","","",17,[[["self"]],["aes128gcm"]]],[11,"clone","pwbox::sodium","",6,[[["self"]],["scrypt"]]],[11,"clone","","",21,[[["self"]],["xsalsa20poly1305"]]],[11,"drop","pwbox","",16,[[["self"]]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","pwbox::rcrypto","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","pwbox::sodium","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","pwbox","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"deref","","",16,N],[11,"name","","",1,[[["self"]],["option",["str"]]]],[11,"cause","","",1,[[["self"]],["option",["fail"]]]],[11,"backtrace","","",1,[[["self"]],["option",["backtrace"]]]],[11,"name","","",2,[[["self"]],["option",["str"]]]],[11,"cause","","",2,[[["self"]],["option",["fail"]]]],[11,"backtrace","","",2,[[["self"]],["option",["backtrace"]]]],[11,"serialize","","",3,[[["self"],["__s"]],["result"]]],[11,"serialize","","",0,[[["self"],["__s"]],["result"]]],[11,"serialize","pwbox::rcrypto","",5,[[["self"],["__s"]],["result"]]],[11,"serialize","pwbox::sodium","",6,[[["self"],["__s"]],["result"]]],[11,"deserialize","pwbox","",3,[[["__d"]],["result"]]],[11,"deserialize","","",0,[[["__d"]],["result"]]],[11,"deserialize","pwbox::rcrypto","",5,[[["__d"]],["result"]]],[11,"deserialize","pwbox::sodium","",6,[[["__d"]],["result"]]],[18,"KEY_LEN","pwbox","Byte size of a key for this cipher.",8,N],[18,"NONCE_LEN","","Byte size of a nonce (aka initialization vector, IV) for…",8,N],[18,"KEY_LEN","","Byte size of a MAC key.",7,N],[18,"MAC_LEN","","Byte size of the MAC output.",7,N],[11,"build_box","","Initializes a `PwBoxBuilder` with the recommended cipher…",9,[[["r"]],["pwboxbuilder"]]],[18,"KEY_LEN","","Byte size of a key.",10,N],[18,"NONCE_LEN","","Byte size of a nonce (aka initialization vector, or IV).",10,N],[18,"MAC_LEN","","Byte size of a message authentication code (MAC).",10,N]],"paths":[[3,"CipherOutput"],[4,"EraseError"],[4,"Error"],[3,"ErasedPwBox"],[3,"Eraser"],[3,"Scrypt"],[3,"Scrypt"],[8,"Mac"],[8,"UnauthenticatedCipher"],[8,"Suite"],[8,"Cipher"],[8,"DeriveKey"],[3,"PwBox"],[3,"RestoredPwBox"],[3,"PwBoxBuilder"],[3,"CipherWithMac"],[3,"SensitiveData"],[3,"Aes128Gcm"],[4,"Aes128Ctr"],[4,"Keccak256"],[4,"RustCrypto"],[3,"XSalsa20Poly1305"],[4,"Sodium"]]};
initSearch(searchIndex);addSearchOptions(searchIndex);
